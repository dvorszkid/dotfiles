##
# PATH dirs
##
export PATH="${HOME}/.local/bin:${PATH}"

if [ -d "$HOME/.local/bin.local" ]
then
    export PATH="${HOME}/.local/bin.local:${PATH}"
fi

if [ -d "$HOME/.fzf/bin" ]
then
    export PATH="${HOME}/.fzf/bin:${PATH}"
    if [ -x "$(command -v rg)" ]; then
        export FZF_DEFAULT_COMMAND='rg --files'
    elif [ -x "$(command -v ag)" ]; then
        export FZF_DEFAULT_COMMAND='ag -g ""'
    fi
    export FZF_DEFAULT_OPTS="--history=$HOME/.local/share/fzf-history/default"
fi

if [ -d "$HOME/.cargo/bin" ]
then
    export PATH="${HOME}/.cargo/bin:${PATH}"
fi

if [ -d "$HOME/.nvm" ]
then
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

if [ -d "$HOME/.local/share/pnpm" ]
then
    export PNPM_HOME="$HOME/.local/share/pnpm"
    export PATH="$PNPM_HOME:$PATH"
fi

if [ -d "$HOME/.gem/ruby/3.3.0/bin" ]
then
    export PATH="$HOME/.gem/ruby/3.3.0/bin:${PATH}"
fi

if [ -f "/opt/homebrew/bin/brew" ]
then
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

if [ -d "/opt/homebrew/opt/llvm/bin" ]
then
    export PATH="/opt/homebrew/opt/llvm/bin:${PATH}"
fi

if [ -d "/opt/homebrew/opt/qt@5/bin" ]
then
    export PATH="/opt/homebrew/opt/qt@5/bin:${PATH}"
fi

if [ -d "/opt/homebrew/opt/coreutils/libexec/gnubin" ]
then
    export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:${PATH}"
fi

if [ -d "/opt/homebrew/opt/ruby/bin" ]
then
    export PATH="/opt/homebrew/opt/ruby/bin:${PATH}"
fi

if [ -d "$HOME/.dotnet/tools" ]
then
    export PATH="$HOME/.dotnet/tools:${PATH}"
fi


##
# Strict permissions
#
# Also need to set the following in /etc/sudoers to not make a mess, that's why whitelisting:
#   ## This makes it possible to specify a more permissive umask in sudoers than the user's own umask.
#   Defaults umask_override
##
if [ "$(hostname)" == "basestar" ]; then
    umask 027
fi


##
# Default apps
##
if command -v nvim &> /dev/null
then
    export EDITOR=nvim
else
    export EDITOR=vim
fi


##
# WSL apps
##
if command -v wslview &> /dev/null
then
    # eg. 'webbrowser' python package will use the browser in Windows
    export BROWSER="wslview"
fi


##
# Open in background for MC
##
export MC_XDG_OPEN=$(which mc-xdg-open)


##
# Use Linux config dir on MacOS
##
export XDG_CONFIG_HOME="$HOME/.config"


##
# Colors for ls
##
if [[ `uname` == "Linux" ]]
then
	eval `dircolors "$HOME/.local/share/dircolors/solarized/dircolors.ansi-dark"`
fi


##
# Colors for Man Pages
##
export LESS_TERMCAP_md=$'\E[01;38;5;74m'
export LESS_TERMCAP_us=$'\E[01;36m'


##
# Screensaver settings
##
export XSECURELOCK_SWITCH_USER_COMMAND="dm-tool switch-to-greeter"


##
# Local .env
##
[ -f "$HOME/.env.local" ] && source "$HOME/.env.local"
